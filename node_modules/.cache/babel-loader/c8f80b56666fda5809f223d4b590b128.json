{"ast":null,"code":"'use strict';\n\nvar PromiseA;\n\ntry {\n  PromiseA = require('bluebird');\n} catch (e) {\n  PromiseA = global.Promise;\n}\n\nvar util = require('util');\n\nvar promisify = util.promisify || PromiseA.promisify;\n\nif (!PromiseA || !promisify) {\n  throw new Error(\"DON'T PANIC. Everything is A-OK.\" + \" However, you're on a really old version of node. All you need to do is `npm install --save bluebird`\" + \" (in your project directory, which is probably '\" + require('path').dirname(require.main.filename) + \"')\" + \" and everything will work just fine.\");\n}\n\nvar fs = require('fs');\n\nvar writeFileAsync = promisify(fs.writeFile);\nvar unlinkAsync = promisify(fs.unlink);\nvar renameAsync = promisify(fs.rename);\n\nvar crypto = require('crypto');\n\nfunction noop() {}\n\nfunction create(options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!options.tmp) {\n    options.tmp = 'tmp';\n  }\n\n  if (!options.bak) {\n    options.bak = 'bak';\n  }\n\n  if (options.tmp === options.bak) {\n    throw new Error(\"'tmp' and 'bak' suffixes cannot be the same... duh\");\n  }\n\n  var tmpnamefn = options.tmpnamefn || function (pathname) {\n    return pathname + '.' + crypto.randomBytes(8).toString('hex') + '.' + options.tmp;\n  };\n\n  var baknamefn = options.baknamefn || function (pathname) {\n    return pathname + '.' + options.bak;\n  };\n  /*\n  var namefn = options.namefn || function (pathname) {\n    return pathname;\n  };\n  */\n\n\n  var sfs = {\n    writeFileAsync: function (filename, data, options) {\n      return sfs.stage(filename, data, options).then(function (tmpname) {\n        //console.log(filename);\n        return sfs.commit(tmpname, filename);\n      });\n    },\n    stageAsync: function (filename, data, options) {\n      var tmpname = tmpnamefn(filename); //console.log(tmpname);\n\n      return writeFileAsync(tmpname, data, options).then(function () {\n        return tmpname;\n      });\n    },\n    commitAsync: function (tmpname, filename) {\n      var bakname = baknamefn(filename); // this may not exist\n\n      return unlinkAsync(bakname).then(noop, noop).then(function () {\n        // this may not exist\n        //console.log(namefn(filename), '->', bakname);\n        return renameAsync(filename, bakname).then(function () {//console.log('created bak');\n        }, noop);\n      }).then(function () {\n        // this must be successful\n        //console.log(filename, '->', filename);\n        return renameAsync(tmpname, filename).then(noop, function (err) {\n          //console.error(err);\n          return sfs.revert(filename).then(function () {\n            return PromiseA.reject(err);\n          });\n        });\n      });\n    },\n    revertAsync: function (filename) {\n      return new PromiseA(function (resolve, reject) {\n        var bakname = baknamefn(filename);\n        var tmpname = tmpnamefn(filename);\n        var reader = fs.createReadStream(bakname);\n        var writer = fs.createWriteStream(tmpname);\n        reader.on('error', reject);\n        writer.on('error', reject);\n        reader.pipe(writer);\n        writer.on('close', function () {\n          sfs.commit(tmpname, filename).then(resolve, reject);\n        });\n      });\n    },\n    tmpnamefn: tmpnamefn,\n    baknamefn: baknamefn,\n    create: create\n  };\n  sfs.writeFile = sfs.writeFileAsync;\n  sfs.stage = sfs.stageAsync;\n  sfs.commit = sfs.commitAsync;\n  sfs.revert = sfs.revertAsync;\n  return sfs;\n}\n\nmodule.exports = create();","map":{"version":3,"sources":["/home/neil/Desktop/Programming/LetsCodeSBISD/Forwarder/node_modules/safe-replace/index.js"],"names":["PromiseA","require","e","global","Promise","util","promisify","Error","dirname","main","filename","fs","writeFileAsync","writeFile","unlinkAsync","unlink","renameAsync","rename","crypto","noop","create","options","tmp","bak","tmpnamefn","pathname","randomBytes","toString","baknamefn","sfs","data","stage","then","tmpname","commit","stageAsync","commitAsync","bakname","err","revert","reject","revertAsync","resolve","reader","createReadStream","writer","createWriteStream","on","pipe","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar PromiseA;\ntry {\n  PromiseA = require('bluebird');\n} catch(e) {\n  PromiseA = global.Promise;\n}\n\nvar util = require('util');\nvar promisify = util.promisify || PromiseA.promisify;\nif (!PromiseA || !promisify) {\n  throw new Error(\"DON'T PANIC. Everything is A-OK.\"\n    + \" However, you're on a really old version of node. All you need to do is `npm install --save bluebird`\"\n    + \" (in your project directory, which is probably '\" + require('path').dirname(require.main.filename) + \"')\"\n    + \" and everything will work just fine.\");\n}\n\nvar fs = require('fs');\nvar writeFileAsync = promisify(fs.writeFile);\nvar unlinkAsync = promisify(fs.unlink);\nvar renameAsync = promisify(fs.rename);\nvar crypto = require('crypto');\n\nfunction noop() {\n}\n\nfunction create(options) {\n\n  if (!options) {\n    options = {};\n  }\n  if (!options.tmp) {\n    options.tmp = 'tmp';\n  }\n  if (!options.bak) {\n    options.bak = 'bak';\n  }\n  if (options.tmp === options.bak) {\n    throw new Error(\"'tmp' and 'bak' suffixes cannot be the same... duh\");\n  }\n\n  var tmpnamefn = options.tmpnamefn || function (pathname) {\n    return pathname + '.' + crypto.randomBytes(8).toString('hex') + '.' + options.tmp;\n  };\n  var baknamefn = options.baknamefn || function (pathname) {\n    return pathname + '.' + options.bak;\n  };\n  /*\n  var namefn = options.namefn || function (pathname) {\n    return pathname;\n  };\n  */\n\n  var sfs = {\n    writeFileAsync: function (filename, data, options) {\n      return sfs.stage(filename, data, options).then(function (tmpname) {\n        //console.log(filename);\n        return sfs.commit(tmpname, filename);\n      });\n    }\n  , stageAsync: function (filename, data, options) {\n      var tmpname = tmpnamefn(filename);\n      //console.log(tmpname);\n      return writeFileAsync(tmpname, data, options).then(function () {\n        return tmpname;\n      });\n    }\n  , commitAsync: function (tmpname, filename) {\n      var bakname = baknamefn(filename);\n      // this may not exist\n      return unlinkAsync(bakname).then(noop, noop).then(function () {\n        // this may not exist\n        //console.log(namefn(filename), '->', bakname);\n        return renameAsync(filename, bakname).then(function () {\n          //console.log('created bak');\n        }, noop);\n      }).then(function () {\n        // this must be successful\n        //console.log(filename, '->', filename);\n        return renameAsync(tmpname, filename).then(noop, function (err) {\n          //console.error(err);\n          return sfs.revert(filename).then(function () {\n            return PromiseA.reject(err);\n          });\n        });\n      });\n    }\n  , revertAsync: function (filename) {\n      return new PromiseA(function (resolve, reject) {\n        var bakname = baknamefn(filename);\n        var tmpname = tmpnamefn(filename);\n\n        var reader = fs.createReadStream(bakname);\n        var writer = fs.createWriteStream(tmpname);\n\n        reader.on('error', reject);\n        writer.on('error', reject);\n\n        reader.pipe(writer);\n        writer.on('close', function () {\n          sfs.commit(tmpname, filename).then(resolve, reject);\n        });\n      });\n    }\n  , tmpnamefn: tmpnamefn\n  , baknamefn: baknamefn\n  , create: create\n  };\n  sfs.writeFile = sfs.writeFileAsync;\n  sfs.stage = sfs.stageAsync;\n  sfs.commit = sfs.commitAsync;\n  sfs.revert = sfs.revertAsync;\n\n  return sfs;\n}\n\nmodule.exports = create();\n"]},"metadata":{},"sourceType":"script"}