{"ast":null,"code":"'use strict';\n\nvar pkg = require('./package.json');\n\nvar ACME = require('@root/acme');\n\nvar Greenlock = module.exports;\n\nvar request = require('@root/request');\n\nvar process = require('process');\n\nvar G = Greenlock;\n\nvar U = require('./utils.js');\n\nvar E = require('./errors.js');\n\nvar P = require('./plugins.js');\n\nvar A = require('./accounts.js');\n\nvar C = require('./certificates.js');\n\nvar DIR = require('./lib/directory-url.js');\n\nvar ChWrapper = require('./lib/challenges-wrapper.js');\n\nvar MngWrapper = require('./lib/manager-wrapper.js');\n\nvar UserEvents = require('./user-events.js');\n\nvar Init = require('./lib/init.js');\n\nvar caches = {}; // { maintainerEmail, directoryUrl, subscriberEmail, store, challenges  }\n\nG.create = function (gconf) {\n  var greenlock = {};\n  var gdefaults = {};\n\n  if (!gconf) {\n    gconf = {};\n  }\n\n  greenlock._create = function () {\n    if (!gconf._bin_mode) {\n      if (!gconf.maintainerEmail) {\n        throw E.NO_MAINTAINER('create');\n      } // TODO send welcome message with benefit info\n\n\n      U._validMx(gconf.maintainerEmail).catch(function () {\n        console.error('invalid maintainer contact info:', gconf.maintainerEmail); // maybe move this to init and don't exit the process, just in case\n\n        process.exit(1);\n      });\n    }\n\n    if ('function' === typeof gconf.notify) {\n      gdefaults.notify = gconf.notify;\n    } else {\n      gdefaults.notify = _notify;\n    }\n\n    gconf = Init._init(gconf); // OK: /path/to/blah\n    // OK: npm-name-blah\n    // NOT OK: ./rel/path/to/blah\n    // Error: .blah\n\n    if ('.' === (gconf.manager.module || '')[0]) {\n      if (!gconf.packageRoot) {\n        gconf.packageRoot = process.cwd();\n        console.warn('`packageRoot` not defined, trying ' + gconf.packageRoot);\n      }\n\n      gconf.manager.module = gconf.packageRoot + '/' + gconf.manager.module.slice(2);\n    } // Wraps each of the following with appropriate error checking\n    // greenlock.manager.defaults\n    // greenlock.sites.add\n    // greenlock.sites.update\n    // greenlock.sites.remove\n    // greenlock.sites.find\n    // greenlock.sites.get\n\n\n    MngWrapper.wrap(greenlock, gconf); // The goal here is to reduce boilerplate, such as error checking\n    // and duration parsing, that a manager must implement\n\n    greenlock.sites.add = greenlock.add = greenlock.manager.add;\n    greenlock.sites.update = greenlock.update = greenlock.manager.update;\n    greenlock.sites.remove = greenlock.remove = greenlock.manager.remove; // Exports challenges.get for Greenlock Express HTTP-01,\n    // and whatever odd use case pops up, I suppose\n    // greenlock.challenges.get\n\n    ChWrapper.wrap(greenlock);\n\n    DIR._getDefaultDirectoryUrl('', gconf.staging, '');\n\n    if (gconf.directoryUrl) {\n      gdefaults.directoryUrl = gconf.directoryUrl;\n    }\n\n    greenlock._defaults = gdefaults;\n    greenlock._defaults.debug = gconf.debug;\n\n    if (!gconf._bin_mode && false !== gconf.renew) {\n      // renew every 90-ish minutes (random for staggering)\n      // the weak setTimeout (unref) means that when run as a CLI process this\n      // will still finish as expected, and not wait on the timeout\n      (function renew() {\n        setTimeout(function () {\n          greenlock.renew({});\n          renew();\n        }, Math.PI * 30 * 60 * 1000).unref();\n      })();\n    }\n  }; // The purpose of init is to make MCONF the source of truth\n\n\n  greenlock._init = function () {\n    var p;\n\n    greenlock._init = function () {\n      return p;\n    };\n\n    p = greenlock.manager.init({\n      request: request //punycode: require('punycode')\n\n    }).then(async function () {\n      var MCONF = await greenlock.manager._defaults();\n      mergeDefaults(MCONF, gconf);\n\n      if (true === MCONF.agreeToTerms) {\n        gdefaults.agreeToTerms = function (tos) {\n          return Promise.resolve(tos);\n        };\n      }\n\n      return greenlock.manager._defaults(MCONF);\n    }).catch(function (err) {\n      if ('load_plugin' !== err.context) {\n        console.error('Fatal error during greenlock init:');\n        console.error(err.message);\n      }\n\n      if (!gconf._bin_mode) {\n        process.exit(1);\n      }\n    });\n    return p;\n  };\n\n  greenlock.notify = greenlock._notify = function (ev, params) {\n    var mng = greenlock.manager;\n\n    if ('_' === String(ev)[0]) {\n      if ('_cert_issue' === ev) {\n        try {\n          mng.update({\n            subject: params.subject,\n            renewAt: params.renewAt\n          }).catch(function (e) {\n            e.context = '_cert_issue';\n\n            greenlock._notify('error', e);\n          });\n        } catch (e) {\n          e.context = '_cert_issue';\n\n          greenlock._notify('error', e);\n        }\n      } // trap internal events internally\n\n\n      return;\n    }\n\n    try {\n      var p = greenlock._defaults.notify(ev, params);\n\n      if (p && p.catch) {\n        p.catch(function (e) {\n          console.error(\"Promise Rejection on event '\" + ev + \"':\");\n          console.error(e);\n        });\n      }\n    } catch (e) {\n      console.error(\"Thrown Exception on event '\" + ev + \"':\");\n      console.error(e);\n      console.error(params);\n    }\n\n    if (-1 !== ['cert_issue', 'cert_renewal'].indexOf(ev)) {\n      // We will notify all greenlock users of mandatory and security updates\n      // We'll keep track of versions and os so we can make sure things work well\n      // { name, version, email, domains, action, communityMember, telemetry }\n      // TODO look at the other one\n      UserEvents.notify({\n        /*\n        // maintainer should be only on pre-publish, or maybe install, I think\n        maintainerEmail: greenlock._defaults._maintainerEmail,\n        name: greenlock._defaults._packageAgent,\n        version: greenlock._defaults._maintainerPackageVersion,\n        //action: params.pems._type,\n        domains: params.altnames,\n        subscriberEmail: greenlock._defaults._subscriberEmail,\n        // TODO enable for Greenlock Pro\n        //customerEmail: args.customerEmail\n        telemetry: greenlock._defaults.telemetry\n        */\n      });\n    }\n  }; // certs.get\n\n\n  greenlock.get = async function (args) {\n    greenlock._single(args);\n\n    args._includePems = true;\n    var results = await greenlock.renew(args);\n\n    if (!results || !results.length) {\n      // TODO throw an error here?\n      return null;\n    } // just get the first one\n\n\n    var result = results[0]; // (there should be only one, ideally)\n\n    if (results.length > 1) {\n      var err = new Error(\"a search for '\" + args.servername + \"' returned multiple certificates\");\n      err.context = 'duplicate_certs';\n      err.servername = args.servername;\n      err.subjects = results.map(function (r) {\n        return (r.site || {}).subject || 'N/A';\n      });\n\n      greenlock._notify('warning', err);\n    }\n\n    if (result.error) {\n      return Promise.reject(result.error);\n    } // site for plugin options, such as http-01 challenge\n    // pems for the obvious reasons\n\n\n    return result;\n  }; // TODO remove async here, it doesn't matter\n\n\n  greenlock._single = async function (args) {\n    if ('string' !== typeof args.servername) {\n      throw new Error('no `servername` given');\n    } // www.example.com => *.example.com\n\n\n    args.wildname = '*.' + args.servername.split('.').slice(1).join('.');\n\n    if (args.wildname.split('.').length < 3) {\n      // No '*.com'\n      args.wildname = '';\n    }\n\n    if (args.servernames || //TODO I think we need to block altnames as well, but I don't want to break anything\n    //args.altnames ||\n    args.subject || args.renewBefore || args.issueBefore || args.expiresBefore) {\n      throw new Error('bad arguments, did you mean to call greenlock.renew()?');\n    } // duplicate, force, and others still allowed\n\n\n    return args;\n  };\n\n  greenlock._config = async function (args) {\n    greenlock._single(args);\n\n    var sites = await greenlock._configAll(args);\n    return sites[0];\n  };\n\n  greenlock._configAll = async function (args) {\n    var sites = await greenlock._find(args);\n\n    if (!sites || !sites.length) {\n      return [];\n    }\n\n    sites = JSON.parse(JSON.stringify(sites));\n    var mconf = await greenlock.manager._defaults();\n    return sites.map(function (site) {\n      if (site.store && site.challenges) {\n        return site;\n      }\n\n      var dconf = site; // TODO make cli and api mode the same\n\n      if (gconf._bin_mode) {\n        dconf = site.defaults = {};\n      }\n\n      if (!site.store) {\n        dconf.store = mconf.store;\n      }\n\n      if (!site.challenges) {\n        dconf.challenges = mconf.challenges;\n      }\n\n      return site;\n    });\n  }; // needs to get info about the renewal, such as which store and challenge(s) to use\n\n\n  greenlock.renew = async function (args) {\n    await greenlock._init();\n    var mconf = await greenlock.manager._defaults();\n    return greenlock._renew(mconf, args);\n  };\n\n  greenlock._renew = async function (mconf, args) {\n    if (!args) {\n      args = {};\n    }\n\n    var renewedOrFailed = []; //console.log('greenlock._renew find', args);\n\n    var sites = await greenlock._find(args); // Note: the manager must guaranteed that these are mutable copies\n    //console.log('greenlock._renew found', sites);;\n\n    if (!Array.isArray(sites)) {\n      throw new Error('Developer Error: not an array of sites returned from find: ' + JSON.stringify(sites));\n    }\n\n    await async function next() {\n      var site = sites.shift();\n\n      if (!site) {\n        return null;\n      }\n\n      var order = {\n        site: site\n      };\n      renewedOrFailed.push(order); // TODO merge args + result?\n\n      return greenlock._order(mconf, site).then(function (pems) {\n        if (args._includePems) {\n          order.pems = pems;\n        }\n      }).catch(function (err) {\n        order.error = err; // For greenlock express serialization\n\n        err.toJSON = errorToJSON;\n        err.context = err.context || 'cert_order';\n        err.subject = site.subject;\n\n        if (args.servername) {\n          err.servername = args.servername;\n        } // for debugging, but not to be relied on\n\n\n        err._site = site; // TODO err.context = err.context || 'renew_certificate'\n\n        greenlock._notify('error', err);\n      }).then(function () {\n        return next();\n      });\n    }();\n    return renewedOrFailed;\n  };\n\n  greenlock._acme = async function (mconf, args, dirUrl) {\n    var packageAgent = gconf.packageAgent || ''; // because Greenlock_Express/v3.x Greenlock/v3 is redundant\n\n    if (!/greenlock/i.test(packageAgent)) {\n      packageAgent = (packageAgent + ' Greenlock/' + pkg.version).trim();\n    }\n\n    var acme = ACME.create({\n      maintainerEmail: gconf.maintainerEmail,\n      packageAgent: packageAgent,\n      notify: greenlock._notify,\n      debug: greenlock._defaults.debug || args.debug\n    });\n    var dir = caches[dirUrl]; // don't cache more than an hour\n\n    if (dir && Date.now() - dir.ts < 1 * 60 * 60 * 1000) {\n      return dir.promise;\n    }\n\n    await acme.init(dirUrl).catch(function (err) {\n      // TODO this is a special kind of failure mode. What should we do?\n      console.error(\"[debug] Let's Encrypt may be down for maintenance or `directoryUrl` may be wrong\");\n      throw err;\n    });\n    caches[dirUrl] = {\n      promise: Promise.resolve(acme),\n      ts: Date.now()\n    };\n    return acme;\n  };\n\n  greenlock.order = async function (siteConf) {\n    await greenlock._init();\n    var mconf = await greenlock.manager._defaults();\n    return greenlock._order(mconf, siteConf);\n  };\n\n  greenlock._order = async function (mconf, siteConf) {\n    // packageAgent, maintainerEmail\n    var dirUrl = DIR._getDirectoryUrl(siteConf.directoryUrl || mconf.directoryUrl, siteConf.subject);\n\n    var acme = await greenlock._acme(mconf, siteConf, dirUrl);\n    var storeConf = siteConf.store || mconf.store;\n    storeConf = JSON.parse(JSON.stringify(storeConf));\n    storeConf.packageRoot = gconf.packageRoot;\n\n    if (!storeConf.basePath) {\n      storeConf.basePath = gconf.configDir;\n    }\n\n    if ('.' === (storeConf.basePath || '')[0]) {\n      if (!gconf.packageRoot) {\n        gconf.packageRoot = process.cwd();\n        console.warn('`packageRoot` not defined, trying ' + gconf.packageRoot);\n      }\n\n      storeConf.basePath = require('path').resolve(gconf.packageRoot || '', storeConf.basePath);\n    }\n\n    storeConf.directoryUrl = dirUrl;\n    var store = await P._loadStore(storeConf);\n    var account = await A._getOrCreate(greenlock, mconf, store.accounts, acme, siteConf);\n    var challengeConfs = siteConf.challenges || mconf.challenges;\n    var challenges = {};\n    var arr = await Promise.all(Object.keys(challengeConfs).map(function (typ01) {\n      return P._loadChallenge(challengeConfs, typ01);\n    }));\n    arr.forEach(function (el) {\n      challenges[el._type] = el;\n    });\n    var pems = await C._getOrOrder(greenlock, mconf, store.certificates, acme, challenges, account, siteConf);\n\n    if (!pems) {\n      throw new Error('no order result');\n    }\n\n    if (!pems.privkey) {\n      throw new Error('missing private key, which is kinda important');\n    }\n\n    return pems;\n  };\n\n  greenlock._create();\n\n  return greenlock;\n};\n\nG._loadChallenge = P._loadChallenge;\n\nfunction errorToJSON(e) {\n  var error = {};\n  Object.getOwnPropertyNames(e).forEach(function (k) {\n    error[k] = e[k];\n  });\n  return error;\n}\n\nfunction mergeDefaults(MCONF, gconf) {\n  if (gconf.agreeToTerms === true || MCONF.agreeToTerms === true || // TODO deprecate\n  gconf.agreeTos === true || MCONF.agreeTos === true) {\n    MCONF.agreeToTerms = true;\n  }\n\n  if (!MCONF.subscriberEmail && gconf.subscriberEmail) {\n    MCONF.subscriberEmail = gconf.subscriberEmail;\n  } // Load the default store module\n\n\n  if (!MCONF.store) {\n    if (gconf.store) {\n      MCONF.store = gconf.store;\n    } else {\n      MCONF.store = {\n        module: 'greenlock-store-fs'\n      };\n      console.info('[default] store.module: ' + MCONF.store.module);\n    }\n  }\n  /*\n  if ('greenlock-store-fs' === MCONF.store.module && !MCONF.store.basePath) {\n      //homedir = require('os').homedir();\n      if (gconf.configFile) {\n          MCONF.store.basePath = gconf.configFile.replace(/\\.json$/i, '.d');\n      } else {\n          MCONF.store.basePath = './greenlock.d';\n      }\n  }\n  */\n  // just to test that it loads\n\n\n  P._loadSync(MCONF.store.module); // Load the default challenge modules\n\n\n  var challenges = MCONF.challenges || gconf.challenges;\n\n  if (!challenges) {\n    challenges = {};\n  }\n\n  if (!challenges['http-01'] && !challenges['dns-01']) {\n    challenges['http-01'] = {\n      module: 'acme-http-01-standalone'\n    };\n    console.info('[default] challenges.http-01.module: ' + challenges['http-01'].module);\n  }\n\n  if (challenges['http-01']) {\n    if ('string' !== typeof challenges['http-01'].module) {\n      throw new Error('bad challenge http-01 module config:' + JSON.stringify(challenges['http-01']));\n    }\n\n    P._loadSync(challenges['http-01'].module);\n  }\n\n  if (challenges['dns-01']) {\n    if ('string' !== typeof challenges['dns-01'].module) {\n      throw new Error('bad challenge dns-01 module config' + JSON.stringify(challenges['dns-01']));\n    }\n\n    P._loadSync(challenges['dns-01'].module);\n  }\n\n  MCONF.challenges = challenges;\n\n  if (!MCONF.renewOffset) {\n    MCONF.renewOffset = gconf.renewOffset || '-45d';\n    console.info('[default] renewOffset: ' + MCONF.renewOffset);\n  }\n\n  if (!MCONF.renewStagger) {\n    MCONF.renewStagger = gconf.renewStagger || '3d';\n    console.info('[default] renewStagger: ' + MCONF.renewStagger);\n  }\n\n  var vers = process.versions.node.split('.');\n  var defaultKeyType = 'EC-P256';\n\n  if (vers[0] < 10 || vers[0] === '10' && vers[1] < '12') {\n    defaultKeyType = 'RSA-2048';\n  }\n\n  if (!MCONF.accountKeyType) {\n    MCONF.accountKeyType = gconf.accountKeyType || defaultKeyType;\n    console.info('[default] accountKeyType: ' + MCONF.accountKeyType);\n  }\n\n  if (!MCONF.serverKeyType) {\n    MCONF.serverKeyType = gconf.serverKeyType || 'RSA-2048';\n    console.info('[default] serverKeyType: ' + MCONF.serverKeyType);\n  }\n\n  if (!MCONF.subscriberEmail && false !== MCONF.subscriberEmail) {\n    MCONF.subscriberEmail = gconf.subscriberEmail || gconf.maintainerEmail || undefined;\n    MCONF.agreeToTerms = gconf.agreeToTerms || undefined;\n    console.info('');\n    console.info('[default] subscriberEmail: ' + MCONF.subscriberEmail);\n    console.info('[default] agreeToTerms: ' + (MCONF.agreeToTerms || gconf.agreeToTerms || '(show notice on use)'));\n    console.info('');\n  }\n}\n\nfunction _notify(ev, args) {\n  if (!args) {\n    args = ev;\n    ev = args.event;\n    delete args.event;\n  } // TODO define message types\n\n\n  if (!_notify._notice) {\n    console.info('set greenlockOptions.notify to override the default logger');\n    _notify._notice = true;\n  }\n\n  var prefix = 'Warning';\n\n  switch (ev) {\n    case 'error':\n      prefix = 'Error';\n\n    /* falls through */\n\n    case 'warning':\n      console.error(prefix + '%s:', (' ' + (args.context || '')).trimRight());\n      console.error(args.message);\n\n      if (args.description) {\n        console.error(args.description);\n      }\n\n      if (args.code) {\n        console.error('code:', args.code);\n      }\n\n      if (args.stack) {\n        console.error(args.stack);\n      }\n\n      break;\n\n    default:\n      if (/status/.test(ev)) {\n        console.info(ev, args.altname || args.subject || '', args.status || '');\n\n        if (!args.status) {\n          console.info(args);\n        }\n\n        break;\n      }\n\n      console.info(ev, '(more info available: ' + Object.keys(args).join(' ') + ')');\n  }\n}","map":{"version":3,"sources":["/home/neil/Desktop/Programming/LetsCodeSBISD/Forwarder/node_modules/@root/greenlock/greenlock.js"],"names":["pkg","require","ACME","Greenlock","module","exports","request","process","G","U","E","P","A","C","DIR","ChWrapper","MngWrapper","UserEvents","Init","caches","create","gconf","greenlock","gdefaults","_create","_bin_mode","maintainerEmail","NO_MAINTAINER","_validMx","catch","console","error","exit","notify","_notify","_init","manager","packageRoot","cwd","warn","slice","wrap","sites","add","update","remove","_getDefaultDirectoryUrl","staging","directoryUrl","_defaults","debug","renew","setTimeout","Math","PI","unref","p","init","then","MCONF","mergeDefaults","agreeToTerms","tos","Promise","resolve","err","context","message","ev","params","mng","String","subject","renewAt","e","indexOf","get","args","_single","_includePems","results","length","result","Error","servername","subjects","map","r","site","reject","wildname","split","join","servernames","renewBefore","issueBefore","expiresBefore","_config","_configAll","_find","JSON","parse","stringify","mconf","store","challenges","dconf","defaults","_renew","renewedOrFailed","Array","isArray","next","shift","order","push","_order","pems","toJSON","errorToJSON","_site","_acme","dirUrl","packageAgent","test","version","trim","acme","dir","Date","now","ts","promise","siteConf","_getDirectoryUrl","storeConf","basePath","configDir","_loadStore","account","_getOrCreate","accounts","challengeConfs","arr","all","Object","keys","typ01","_loadChallenge","forEach","el","_type","_getOrOrder","certificates","privkey","getOwnPropertyNames","k","agreeTos","subscriberEmail","info","_loadSync","renewOffset","renewStagger","vers","versions","node","defaultKeyType","accountKeyType","serverKeyType","undefined","event","_notice","prefix","trimRight","description","code","stack","altname","status"],"mappings":"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","sourcesContent":["'use strict';\n\nvar pkg = require('./package.json');\n\nvar ACME = require('@root/acme');\nvar Greenlock = module.exports;\nvar request = require('@root/request');\nvar process = require('process');\n\nvar G = Greenlock;\nvar U = require('./utils.js');\nvar E = require('./errors.js');\nvar P = require('./plugins.js');\nvar A = require('./accounts.js');\nvar C = require('./certificates.js');\n\nvar DIR = require('./lib/directory-url.js');\nvar ChWrapper = require('./lib/challenges-wrapper.js');\nvar MngWrapper = require('./lib/manager-wrapper.js');\n\nvar UserEvents = require('./user-events.js');\nvar Init = require('./lib/init.js');\n\nvar caches = {};\n\n// { maintainerEmail, directoryUrl, subscriberEmail, store, challenges  }\nG.create = function(gconf) {\n    var greenlock = {};\n    var gdefaults = {};\n    if (!gconf) {\n        gconf = {};\n    }\n\n    greenlock._create = function() {\n        if (!gconf._bin_mode) {\n            if (!gconf.maintainerEmail) {\n                throw E.NO_MAINTAINER('create');\n            }\n\n            // TODO send welcome message with benefit info\n            U._validMx(gconf.maintainerEmail).catch(function() {\n                console.error(\n                    'invalid maintainer contact info:',\n                    gconf.maintainerEmail\n                );\n\n                // maybe move this to init and don't exit the process, just in case\n                process.exit(1);\n            });\n        }\n\n        if ('function' === typeof gconf.notify) {\n            gdefaults.notify = gconf.notify;\n        } else {\n            gdefaults.notify = _notify;\n        }\n\n        gconf = Init._init(gconf);\n\n        // OK: /path/to/blah\n        // OK: npm-name-blah\n        // NOT OK: ./rel/path/to/blah\n        // Error: .blah\n        if ('.' === (gconf.manager.module || '')[0]) {\n            if (!gconf.packageRoot) {\n                gconf.packageRoot = process.cwd();\n                console.warn(\n                    '`packageRoot` not defined, trying ' + gconf.packageRoot\n                );\n            }\n            gconf.manager.module =\n                gconf.packageRoot + '/' + gconf.manager.module.slice(2);\n        }\n\n        // Wraps each of the following with appropriate error checking\n        // greenlock.manager.defaults\n        // greenlock.sites.add\n        // greenlock.sites.update\n        // greenlock.sites.remove\n        // greenlock.sites.find\n        // greenlock.sites.get\n        MngWrapper.wrap(greenlock, gconf);\n        // The goal here is to reduce boilerplate, such as error checking\n        // and duration parsing, that a manager must implement\n        greenlock.sites.add = greenlock.add = greenlock.manager.add;\n        greenlock.sites.update = greenlock.update = greenlock.manager.update;\n        greenlock.sites.remove = greenlock.remove = greenlock.manager.remove;\n\n        // Exports challenges.get for Greenlock Express HTTP-01,\n        // and whatever odd use case pops up, I suppose\n        // greenlock.challenges.get\n        ChWrapper.wrap(greenlock);\n\n        DIR._getDefaultDirectoryUrl('', gconf.staging, '');\n        if (gconf.directoryUrl) {\n            gdefaults.directoryUrl = gconf.directoryUrl;\n        }\n\n        greenlock._defaults = gdefaults;\n        greenlock._defaults.debug = gconf.debug;\n\n        if (!gconf._bin_mode && false !== gconf.renew) {\n            // renew every 90-ish minutes (random for staggering)\n            // the weak setTimeout (unref) means that when run as a CLI process this\n            // will still finish as expected, and not wait on the timeout\n            (function renew() {\n                setTimeout(function() {\n                    greenlock.renew({});\n                    renew();\n                }, Math.PI * 30 * 60 * 1000).unref();\n            })();\n        }\n    };\n\n    // The purpose of init is to make MCONF the source of truth\n    greenlock._init = function() {\n        var p;\n        greenlock._init = function() {\n            return p;\n        };\n\n        p = greenlock.manager\n            .init({\n                request: request\n                //punycode: require('punycode')\n            })\n            .then(async function() {\n                var MCONF = await greenlock.manager._defaults();\n                mergeDefaults(MCONF, gconf);\n                if (true === MCONF.agreeToTerms) {\n                    gdefaults.agreeToTerms = function(tos) {\n                        return Promise.resolve(tos);\n                    };\n                }\n\n                return greenlock.manager._defaults(MCONF);\n            })\n            .catch(function(err) {\n                if ('load_plugin' !== err.context) {\n                    console.error('Fatal error during greenlock init:');\n                    console.error(err.message);\n                }\n                if (!gconf._bin_mode) {\n                    process.exit(1);\n                }\n            });\n        return p;\n    };\n\n    greenlock.notify = greenlock._notify = function(ev, params) {\n        var mng = greenlock.manager;\n\n        if ('_' === String(ev)[0]) {\n            if ('_cert_issue' === ev) {\n                try {\n                    mng.update({\n                        subject: params.subject,\n                        renewAt: params.renewAt\n                    }).catch(function(e) {\n                        e.context = '_cert_issue';\n                        greenlock._notify('error', e);\n                    });\n                } catch (e) {\n                    e.context = '_cert_issue';\n                    greenlock._notify('error', e);\n                }\n            }\n            // trap internal events internally\n            return;\n        }\n\n        try {\n            var p = greenlock._defaults.notify(ev, params);\n            if (p && p.catch) {\n                p.catch(function(e) {\n                    console.error(\"Promise Rejection on event '\" + ev + \"':\");\n                    console.error(e);\n                });\n            }\n        } catch (e) {\n            console.error(\"Thrown Exception on event '\" + ev + \"':\");\n            console.error(e);\n            console.error(params);\n        }\n\n        if (-1 !== ['cert_issue', 'cert_renewal'].indexOf(ev)) {\n            // We will notify all greenlock users of mandatory and security updates\n            // We'll keep track of versions and os so we can make sure things work well\n            // { name, version, email, domains, action, communityMember, telemetry }\n            // TODO look at the other one\n            UserEvents.notify({\n                /*\n        // maintainer should be only on pre-publish, or maybe install, I think\n        maintainerEmail: greenlock._defaults._maintainerEmail,\n        name: greenlock._defaults._packageAgent,\n        version: greenlock._defaults._maintainerPackageVersion,\n        //action: params.pems._type,\n        domains: params.altnames,\n        subscriberEmail: greenlock._defaults._subscriberEmail,\n        // TODO enable for Greenlock Pro\n        //customerEmail: args.customerEmail\n        telemetry: greenlock._defaults.telemetry\n        */\n            });\n        }\n    };\n\n    // certs.get\n    greenlock.get = async function(args) {\n        greenlock._single(args);\n        args._includePems = true;\n        var results = await greenlock.renew(args);\n        if (!results || !results.length) {\n            // TODO throw an error here?\n            return null;\n        }\n\n        // just get the first one\n        var result = results[0];\n\n        // (there should be only one, ideally)\n        if (results.length > 1) {\n            var err = new Error(\n                \"a search for '\" +\n                    args.servername +\n                    \"' returned multiple certificates\"\n            );\n            err.context = 'duplicate_certs';\n            err.servername = args.servername;\n            err.subjects = results.map(function(r) {\n                return (r.site || {}).subject || 'N/A';\n            });\n\n            greenlock._notify('warning', err);\n        }\n\n        if (result.error) {\n            return Promise.reject(result.error);\n        }\n\n        // site for plugin options, such as http-01 challenge\n        // pems for the obvious reasons\n        return result;\n    };\n\n    // TODO remove async here, it doesn't matter\n    greenlock._single = async function(args) {\n        if ('string' !== typeof args.servername) {\n            throw new Error('no `servername` given');\n        }\n        // www.example.com => *.example.com\n        args.wildname =\n            '*.' +\n            args.servername\n                .split('.')\n                .slice(1)\n                .join('.');\n        if (args.wildname.split('.').length < 3) {\n            // No '*.com'\n            args.wildname = '';\n        }\n        if (\n            args.servernames ||\n            //TODO I think we need to block altnames as well, but I don't want to break anything\n            //args.altnames ||\n            args.subject ||\n            args.renewBefore ||\n            args.issueBefore ||\n            args.expiresBefore\n        ) {\n            throw new Error(\n                'bad arguments, did you mean to call greenlock.renew()?'\n            );\n        }\n        // duplicate, force, and others still allowed\n        return args;\n    };\n\n    greenlock._config = async function(args) {\n        greenlock._single(args);\n        var sites = await greenlock._configAll(args);\n        return sites[0];\n    };\n    greenlock._configAll = async function(args) {\n        var sites = await greenlock._find(args);\n        if (!sites || !sites.length) {\n            return [];\n        }\n        sites = JSON.parse(JSON.stringify(sites));\n        var mconf = await greenlock.manager._defaults();\n        return sites.map(function(site) {\n            if (site.store && site.challenges) {\n                return site;\n            }\n\n            var dconf = site;\n            // TODO make cli and api mode the same\n            if (gconf._bin_mode) {\n                dconf = site.defaults = {};\n            }\n            if (!site.store) {\n                dconf.store = mconf.store;\n            }\n            if (!site.challenges) {\n                dconf.challenges = mconf.challenges;\n            }\n            return site;\n        });\n    };\n\n    // needs to get info about the renewal, such as which store and challenge(s) to use\n    greenlock.renew = async function(args) {\n        await greenlock._init();\n        var mconf = await greenlock.manager._defaults();\n        return greenlock._renew(mconf, args);\n    };\n    greenlock._renew = async function(mconf, args) {\n        if (!args) {\n            args = {};\n        }\n\n        var renewedOrFailed = [];\n        //console.log('greenlock._renew find', args);\n        var sites = await greenlock._find(args);\n        // Note: the manager must guaranteed that these are mutable copies\n        //console.log('greenlock._renew found', sites);;\n\n        if (!Array.isArray(sites)) {\n            throw new Error(\n                'Developer Error: not an array of sites returned from find: ' +\n                    JSON.stringify(sites)\n            );\n        }\n\n        await (async function next() {\n            var site = sites.shift();\n            if (!site) {\n                return null;\n            }\n\n            var order = { site: site };\n            renewedOrFailed.push(order);\n            // TODO merge args + result?\n            return greenlock\n                ._order(mconf, site)\n                .then(function(pems) {\n                    if (args._includePems) {\n                        order.pems = pems;\n                    }\n                })\n                .catch(function(err) {\n                    order.error = err;\n\n                    // For greenlock express serialization\n                    err.toJSON = errorToJSON;\n                    err.context = err.context || 'cert_order';\n                    err.subject = site.subject;\n                    if (args.servername) {\n                        err.servername = args.servername;\n                    }\n                    // for debugging, but not to be relied on\n                    err._site = site;\n                    // TODO err.context = err.context || 'renew_certificate'\n                    greenlock._notify('error', err);\n                })\n                .then(function() {\n                    return next();\n                });\n        })();\n\n        return renewedOrFailed;\n    };\n\n    greenlock._acme = async function(mconf, args, dirUrl) {\n        var packageAgent = gconf.packageAgent || '';\n        // because Greenlock_Express/v3.x Greenlock/v3 is redundant\n        if (!/greenlock/i.test(packageAgent)) {\n            packageAgent = (packageAgent + ' Greenlock/' + pkg.version).trim();\n        }\n        var acme = ACME.create({\n            maintainerEmail: gconf.maintainerEmail,\n            packageAgent: packageAgent,\n            notify: greenlock._notify,\n            debug: greenlock._defaults.debug || args.debug\n        });\n\n        var dir = caches[dirUrl];\n        // don't cache more than an hour\n        if (dir && Date.now() - dir.ts < 1 * 60 * 60 * 1000) {\n            return dir.promise;\n        }\n\n        await acme.init(dirUrl).catch(function(err) {\n            // TODO this is a special kind of failure mode. What should we do?\n            console.error(\n                \"[debug] Let's Encrypt may be down for maintenance or `directoryUrl` may be wrong\"\n            );\n            throw err;\n        });\n\n        caches[dirUrl] = {\n            promise: Promise.resolve(acme),\n            ts: Date.now()\n        };\n        return acme;\n    };\n\n    greenlock.order = async function(siteConf) {\n        await greenlock._init();\n        var mconf = await greenlock.manager._defaults();\n        return greenlock._order(mconf, siteConf);\n    };\n    greenlock._order = async function(mconf, siteConf) {\n        // packageAgent, maintainerEmail\n\n        var dirUrl = DIR._getDirectoryUrl(\n            siteConf.directoryUrl || mconf.directoryUrl,\n            siteConf.subject\n        );\n\n        var acme = await greenlock._acme(mconf, siteConf, dirUrl);\n        var storeConf = siteConf.store || mconf.store;\n        storeConf = JSON.parse(JSON.stringify(storeConf));\n        storeConf.packageRoot = gconf.packageRoot;\n\n        if (!storeConf.basePath) {\n            storeConf.basePath = gconf.configDir;\n        }\n\n        if ('.' === (storeConf.basePath || '')[0]) {\n            if (!gconf.packageRoot) {\n                gconf.packageRoot = process.cwd();\n                console.warn(\n                    '`packageRoot` not defined, trying ' + gconf.packageRoot\n                );\n            }\n            storeConf.basePath = require('path').resolve(\n                gconf.packageRoot || '',\n                storeConf.basePath\n            );\n        }\n\n        storeConf.directoryUrl = dirUrl;\n        var store = await P._loadStore(storeConf);\n        var account = await A._getOrCreate(\n            greenlock,\n            mconf,\n            store.accounts,\n            acme,\n            siteConf\n        );\n        var challengeConfs = siteConf.challenges || mconf.challenges;\n        var challenges = {};\n        var arr = await Promise.all(\n            Object.keys(challengeConfs).map(function(typ01) {\n                return P._loadChallenge(challengeConfs, typ01);\n            })\n        );\n        arr.forEach(function(el) {\n            challenges[el._type] = el;\n        });\n\n        var pems = await C._getOrOrder(\n            greenlock,\n            mconf,\n            store.certificates,\n            acme,\n            challenges,\n            account,\n            siteConf\n        );\n        if (!pems) {\n            throw new Error('no order result');\n        }\n        if (!pems.privkey) {\n            throw new Error('missing private key, which is kinda important');\n        }\n\n        return pems;\n    };\n\n    greenlock._create();\n\n    return greenlock;\n};\n\nG._loadChallenge = P._loadChallenge;\n\nfunction errorToJSON(e) {\n    var error = {};\n    Object.getOwnPropertyNames(e).forEach(function(k) {\n        error[k] = e[k];\n    });\n    return error;\n}\n\nfunction mergeDefaults(MCONF, gconf) {\n    if (\n        gconf.agreeToTerms === true ||\n        MCONF.agreeToTerms === true ||\n        // TODO deprecate\n        gconf.agreeTos === true ||\n        MCONF.agreeTos === true\n    ) {\n        MCONF.agreeToTerms = true;\n    }\n\n    if (!MCONF.subscriberEmail && gconf.subscriberEmail) {\n        MCONF.subscriberEmail = gconf.subscriberEmail;\n    }\n\n    // Load the default store module\n    if (!MCONF.store) {\n        if (gconf.store) {\n            MCONF.store = gconf.store;\n        } else {\n            MCONF.store = {\n                module: 'greenlock-store-fs'\n            };\n            console.info('[default] store.module: ' + MCONF.store.module);\n        }\n    }\n\n    /*\n    if ('greenlock-store-fs' === MCONF.store.module && !MCONF.store.basePath) {\n        //homedir = require('os').homedir();\n        if (gconf.configFile) {\n            MCONF.store.basePath = gconf.configFile.replace(/\\.json$/i, '.d');\n        } else {\n            MCONF.store.basePath = './greenlock.d';\n        }\n    }\n    */\n\n    // just to test that it loads\n    P._loadSync(MCONF.store.module);\n\n    // Load the default challenge modules\n    var challenges = MCONF.challenges || gconf.challenges;\n    if (!challenges) {\n        challenges = {};\n    }\n    if (!challenges['http-01'] && !challenges['dns-01']) {\n        challenges['http-01'] = { module: 'acme-http-01-standalone' };\n        console.info(\n            '[default] challenges.http-01.module: ' +\n                challenges['http-01'].module\n        );\n    }\n    if (challenges['http-01']) {\n        if ('string' !== typeof challenges['http-01'].module) {\n            throw new Error(\n                'bad challenge http-01 module config:' +\n                    JSON.stringify(challenges['http-01'])\n            );\n        }\n        P._loadSync(challenges['http-01'].module);\n    }\n    if (challenges['dns-01']) {\n        if ('string' !== typeof challenges['dns-01'].module) {\n            throw new Error(\n                'bad challenge dns-01 module config' +\n                    JSON.stringify(challenges['dns-01'])\n            );\n        }\n        P._loadSync(challenges['dns-01'].module);\n    }\n    MCONF.challenges = challenges;\n\n    if (!MCONF.renewOffset) {\n        MCONF.renewOffset = gconf.renewOffset || '-45d';\n        console.info('[default] renewOffset: ' + MCONF.renewOffset);\n    }\n    if (!MCONF.renewStagger) {\n        MCONF.renewStagger = gconf.renewStagger || '3d';\n        console.info('[default] renewStagger: ' + MCONF.renewStagger);\n    }\n\n    var vers = process.versions.node.split('.');\n    var defaultKeyType = 'EC-P256';\n    if (vers[0] < 10 || (vers[0] === '10' && vers[1] < '12')) {\n        defaultKeyType = 'RSA-2048';\n    }\n    if (!MCONF.accountKeyType) {\n        MCONF.accountKeyType = gconf.accountKeyType || defaultKeyType;\n        console.info('[default] accountKeyType: ' + MCONF.accountKeyType);\n    }\n    if (!MCONF.serverKeyType) {\n        MCONF.serverKeyType = gconf.serverKeyType || 'RSA-2048';\n        console.info('[default] serverKeyType: ' + MCONF.serverKeyType);\n    }\n\n    if (!MCONF.subscriberEmail && false !== MCONF.subscriberEmail) {\n        MCONF.subscriberEmail =\n            gconf.subscriberEmail || gconf.maintainerEmail || undefined;\n        MCONF.agreeToTerms = gconf.agreeToTerms || undefined;\n        console.info('');\n        console.info('[default] subscriberEmail: ' + MCONF.subscriberEmail);\n        console.info(\n            '[default] agreeToTerms: ' +\n                (MCONF.agreeToTerms ||\n                    gconf.agreeToTerms ||\n                    '(show notice on use)')\n        );\n        console.info('');\n    }\n}\n\nfunction _notify(ev, args) {\n    if (!args) {\n        args = ev;\n        ev = args.event;\n        delete args.event;\n    }\n\n    // TODO define message types\n    if (!_notify._notice) {\n        console.info(\n            'set greenlockOptions.notify to override the default logger'\n        );\n        _notify._notice = true;\n    }\n    var prefix = 'Warning';\n    switch (ev) {\n        case 'error':\n            prefix = 'Error';\n        /* falls through */\n        case 'warning':\n            console.error(\n                prefix + '%s:',\n                (' ' + (args.context || '')).trimRight()\n            );\n            console.error(args.message);\n            if (args.description) {\n                console.error(args.description);\n            }\n            if (args.code) {\n                console.error('code:', args.code);\n            }\n            if (args.stack) {\n                console.error(args.stack);\n            }\n            break;\n        default:\n            if (/status/.test(ev)) {\n                console.info(\n                    ev,\n                    args.altname || args.subject || '',\n                    args.status || ''\n                );\n                if (!args.status) {\n                    console.info(args);\n                }\n                break;\n            }\n            console.info(\n                ev,\n                '(more info available: ' + Object.keys(args).join(' ') + ')'\n            );\n    }\n}\n"]},"metadata":{},"sourceType":"script"}