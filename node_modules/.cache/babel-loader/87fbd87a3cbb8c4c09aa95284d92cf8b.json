{"ast":null,"code":"'use strict';\n\nvar Init = module.exports;\n\nvar fs = require('fs');\n\nvar path = require('path'); //var promisify = require(\"util\").promisify;\n\n\nInit._init = function (opts) {\n  //var Rc = require(\"@root/greenlock/rc\");\n  var Rc = require('./rc.js');\n\n  var pkgText;\n  var pkgErr;\n  var msgErr; //var emailErr;\n\n  var realPkg;\n  var userPkg;\n  var myPkg = {}; // we want to be SUPER transparent that we're reading from package.json\n  // we don't want anything unexpected\n\n  var implicitConfig = [];\n  var rc;\n\n  if (opts.packageRoot) {\n    try {\n      pkgText = fs.readFileSync(path.resolve(opts.packageRoot, 'package.json'), 'utf8');\n      opts._hasPackage = true;\n    } catch (e) {\n      pkgErr = e;\n\n      if (opts._mustPackage) {\n        console.error('Should be run from package root (the same directory as `package.json`)');\n        process.exit(1);\n        return;\n      }\n\n      console.warn('`packageRoot` should be the root of the package (probably `__dirname`)');\n    }\n  }\n\n  if (pkgText) {\n    try {\n      realPkg = JSON.parse(pkgText);\n    } catch (e) {\n      pkgErr = e;\n    }\n  }\n\n  userPkg = opts.package;\n\n  if (realPkg || userPkg) {\n    userPkg = userPkg || {};\n    realPkg = realPkg || {}; // build package agent\n\n    if (!opts.packageAgent) {\n      // name\n      myPkg.name = userPkg.name;\n\n      if (!myPkg.name) {\n        myPkg.name = realPkg.name;\n        implicitConfig.push('name');\n      } // version\n\n\n      myPkg.version = userPkg.version;\n\n      if (!myPkg.version) {\n        myPkg.version = realPkg.version;\n        implicitConfig.push('version');\n      }\n\n      if (myPkg.name && myPkg.version) {\n        opts.packageAgent = myPkg.name + '/' + myPkg.version;\n      }\n    } // build author\n\n\n    myPkg.author = opts.maintainerEmail;\n\n    if (!myPkg.author) {\n      myPkg.author = userPkg.author && userPkg.author.email || userPkg.author;\n    }\n\n    if (!myPkg.author) {\n      implicitConfig.push('author');\n      myPkg.author = realPkg.author && realPkg.author.email || realPkg.author;\n    }\n\n    if (!opts._init) {\n      opts.maintainerEmail = myPkg.author;\n    }\n  }\n\n  if (!opts.packageAgent) {\n    msgErr = 'missing `packageAgent` and also failed to read `name` and/or `version` from `package.json`';\n\n    if (pkgErr) {\n      msgErr += ': ' + pkgErr.message;\n    }\n\n    throw new Error(msgErr);\n  }\n\n  if (!opts._init) {\n    opts.maintainerEmail = parseMaintainer(opts.maintainerEmail);\n\n    if (!opts.maintainerEmail) {\n      msgErr = 'missing or malformed `maintainerEmail` (or `author` from `package.json`), which is used as the contact for support notices';\n      throw new Error(msgErr);\n    }\n  }\n\n  if (opts.packageRoot) {\n    // Place the rc file in the packageroot\n    rc = Rc._initSync(opts.packageRoot, opts.manager, opts.configDir);\n    opts.configDir = rc.configDir;\n    opts.manager = rc.manager;\n  }\n\n  if (!opts.configDir && !opts.manager) {\n    throw new Error('missing `packageRoot` and `configDir`, but no `manager` was supplied');\n  }\n\n  opts.configFile = path.join(path.resolve(opts.packageRoot, opts.configDir), 'config.json');\n  var config;\n\n  try {\n    config = JSON.parse(fs.readFileSync(opts.configFile));\n  } catch (e) {\n    if ('ENOENT' !== e.code) {\n      throw e;\n    }\n\n    config = {\n      defaults: {}\n    };\n  }\n\n  opts.manager = rc.manager || config.defaults && config.defaults.manager || config.manager;\n\n  if (!opts.manager) {\n    opts.manager = '@greenlock/manager';\n  }\n\n  if ('string' === typeof opts.manager) {\n    opts.manager = {\n      module: opts.manager\n    };\n  }\n\n  opts.manager = JSON.parse(JSON.stringify(opts.manager));\n  var confconf = ['configDir', 'configFile', 'staging', 'directoryUrl'];\n  Object.keys(opts).forEach(function (k) {\n    if (!confconf.includes(k)) {\n      return;\n    }\n\n    if ('undefined' !== typeof opts.manager[k]) {\n      return;\n    }\n\n    opts.manager[k] = opts[k];\n  });\n  /*\n  var ignore = [\"packageRoot\", \"maintainerEmail\", \"packageAgent\", \"staging\", \"directoryUrl\", \"manager\"];\n  Object.keys(opts).forEach(function(k) {\n      if (ignore.includes(k)) {\n          return;\n      }\n      opts.manager[k] = opts[k];\n  });\n  */\n  // Place the rc file in the configDir itself\n  //Rc._initSync(opts.configDir, opts.configDir);\n\n  return opts;\n}; // ex: \"John Doe <john@example.com> (https://john.doe)\"\n// ex: \"John Doe <john@example.com>\"\n// ex: \"<john@example.com>\"\n// ex: \"john@example.com\"\n\n\nvar looseEmailRe = /(^|[\\s<])([^'\" <>:;`]+@[^'\" <>:;`]+\\.[^'\" <>:;`]+)/;\n\nfunction parseMaintainer(maintainerEmail) {\n  try {\n    maintainerEmail = maintainerEmail.match(looseEmailRe)[2];\n  } catch (e) {\n    maintainerEmail = null;\n  }\n\n  return maintainerEmail;\n}","map":{"version":3,"sources":["/home/neil/Desktop/Programming/LetsCodeSBISD/Forwarder/node_modules/@root/greenlock/lib/init.js"],"names":["Init","module","exports","fs","require","path","_init","opts","Rc","pkgText","pkgErr","msgErr","realPkg","userPkg","myPkg","implicitConfig","rc","packageRoot","readFileSync","resolve","_hasPackage","e","_mustPackage","console","error","process","exit","warn","JSON","parse","package","packageAgent","name","push","version","author","maintainerEmail","email","message","Error","parseMaintainer","_initSync","manager","configDir","configFile","join","config","code","defaults","stringify","confconf","Object","keys","forEach","k","includes","looseEmailRe","match"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Init = module.exports;\n\nvar fs = require('fs');\nvar path = require('path');\n//var promisify = require(\"util\").promisify;\n\nInit._init = function(opts) {\n    //var Rc = require(\"@root/greenlock/rc\");\n    var Rc = require('./rc.js');\n    var pkgText;\n    var pkgErr;\n    var msgErr;\n    //var emailErr;\n    var realPkg;\n    var userPkg;\n    var myPkg = {};\n    // we want to be SUPER transparent that we're reading from package.json\n    // we don't want anything unexpected\n    var implicitConfig = [];\n    var rc;\n\n    if (opts.packageRoot) {\n        try {\n            pkgText = fs.readFileSync(\n                path.resolve(opts.packageRoot, 'package.json'),\n                'utf8'\n            );\n            opts._hasPackage = true;\n        } catch (e) {\n            pkgErr = e;\n            if (opts._mustPackage) {\n                console.error(\n                    'Should be run from package root (the same directory as `package.json`)'\n                );\n                process.exit(1);\n                return;\n            }\n            console.warn(\n                '`packageRoot` should be the root of the package (probably `__dirname`)'\n            );\n        }\n    }\n\n    if (pkgText) {\n        try {\n            realPkg = JSON.parse(pkgText);\n        } catch (e) {\n            pkgErr = e;\n        }\n    }\n\n    userPkg = opts.package;\n\n    if (realPkg || userPkg) {\n        userPkg = userPkg || {};\n        realPkg = realPkg || {};\n\n        // build package agent\n        if (!opts.packageAgent) {\n            // name\n            myPkg.name = userPkg.name;\n            if (!myPkg.name) {\n                myPkg.name = realPkg.name;\n                implicitConfig.push('name');\n            }\n\n            // version\n            myPkg.version = userPkg.version;\n            if (!myPkg.version) {\n                myPkg.version = realPkg.version;\n                implicitConfig.push('version');\n            }\n            if (myPkg.name && myPkg.version) {\n                opts.packageAgent = myPkg.name + '/' + myPkg.version;\n            }\n        }\n\n        // build author\n        myPkg.author = opts.maintainerEmail;\n        if (!myPkg.author) {\n            myPkg.author =\n                (userPkg.author && userPkg.author.email) || userPkg.author;\n        }\n        if (!myPkg.author) {\n            implicitConfig.push('author');\n            myPkg.author =\n                (realPkg.author && realPkg.author.email) || realPkg.author;\n        }\n        if (!opts._init) {\n            opts.maintainerEmail = myPkg.author;\n        }\n    }\n\n    if (!opts.packageAgent) {\n        msgErr =\n            'missing `packageAgent` and also failed to read `name` and/or `version` from `package.json`';\n        if (pkgErr) {\n            msgErr += ': ' + pkgErr.message;\n        }\n        throw new Error(msgErr);\n    }\n\n    if (!opts._init) {\n        opts.maintainerEmail = parseMaintainer(opts.maintainerEmail);\n        if (!opts.maintainerEmail) {\n            msgErr =\n                'missing or malformed `maintainerEmail` (or `author` from `package.json`), which is used as the contact for support notices';\n            throw new Error(msgErr);\n        }\n    }\n\n    if (opts.packageRoot) {\n        // Place the rc file in the packageroot\n        rc = Rc._initSync(opts.packageRoot, opts.manager, opts.configDir);\n        opts.configDir = rc.configDir;\n        opts.manager = rc.manager;\n    }\n\n    if (!opts.configDir && !opts.manager) {\n        throw new Error(\n            'missing `packageRoot` and `configDir`, but no `manager` was supplied'\n        );\n    }\n\n    opts.configFile = path.join(\n        path.resolve(opts.packageRoot, opts.configDir),\n        'config.json'\n    );\n    var config;\n    try {\n        config = JSON.parse(fs.readFileSync(opts.configFile));\n    } catch (e) {\n        if ('ENOENT' !== e.code) {\n            throw e;\n        }\n        config = { defaults: {} };\n    }\n\n    opts.manager =\n        rc.manager ||\n        (config.defaults && config.defaults.manager) ||\n        config.manager;\n    if (!opts.manager) {\n        opts.manager = '@greenlock/manager';\n    }\n    if ('string' === typeof opts.manager) {\n        opts.manager = {\n            module: opts.manager\n        };\n    }\n    opts.manager = JSON.parse(JSON.stringify(opts.manager));\n\n    var confconf = ['configDir', 'configFile', 'staging', 'directoryUrl'];\n    Object.keys(opts).forEach(function(k) {\n        if (!confconf.includes(k)) {\n            return;\n        }\n        if ('undefined' !== typeof opts.manager[k]) {\n            return;\n        }\n        opts.manager[k] = opts[k];\n    });\n\n    /*\n    var ignore = [\"packageRoot\", \"maintainerEmail\", \"packageAgent\", \"staging\", \"directoryUrl\", \"manager\"];\n    Object.keys(opts).forEach(function(k) {\n        if (ignore.includes(k)) {\n            return;\n        }\n        opts.manager[k] = opts[k];\n    });\n    */\n\n    // Place the rc file in the configDir itself\n    //Rc._initSync(opts.configDir, opts.configDir);\n    return opts;\n};\n\n// ex: \"John Doe <john@example.com> (https://john.doe)\"\n// ex: \"John Doe <john@example.com>\"\n// ex: \"<john@example.com>\"\n// ex: \"john@example.com\"\nvar looseEmailRe = /(^|[\\s<])([^'\" <>:;`]+@[^'\" <>:;`]+\\.[^'\" <>:;`]+)/;\nfunction parseMaintainer(maintainerEmail) {\n    try {\n        maintainerEmail = maintainerEmail.match(looseEmailRe)[2];\n    } catch (e) {\n        maintainerEmail = null;\n    }\n\n    return maintainerEmail;\n}\n"]},"metadata":{},"sourceType":"script"}