{"ast":null,"code":"\"use strict\";\n\nvar pkg = require(\"./../package.json\");\n\nvar Greenlock = require(\"greenlock\");\n\nfunction updateSSL() {\n  var greenlock = Greenlock.create({\n    configDir: \"./greenlock.d/config.json\",\n    packageAgent: pkg.name + \"/\" + pkg.version,\n    maintainerEmail: pkg.author,\n    staging: true,\n    notify: function (event, details) {\n      if (\"error\" === event) {\n        // `details` is an error object in this case\n        console.error(details);\n      }\n    }\n  });\n  greenlock.manager.defaults({\n    agreeToTerms: true,\n    subscriberEmail: \"webhosting@example.com\"\n  }).then(function (fullConfig) {\n    var altnames = [\"letscodesbisd.com\", \"www.letscodesbisd.com\"];\n    greenlock.add({\n      subject: altnames[0],\n      altnames: altnames\n    }).then(function () {// saved config to db (or file system)\n    });\n  });\n  greenlock.get({\n    servername: subject\n  }).then(function (pems) {\n    if (pems && pems.privkey && pems.cert && pems.chain) {\n      console.info(\"Success\");\n    } //console.log(pems);\n\n  }).catch(function (e) {\n    console.error(\"Big bad error:\", e.code);\n    console.error(e);\n  });\n}\n\nexport default updateSSL;","map":{"version":3,"sources":["/home/neil/Desktop/Programming/LetsCodeSBISD/Forwarder/src/updateSSL.js"],"names":["pkg","require","Greenlock","updateSSL","greenlock","create","configDir","packageAgent","name","version","maintainerEmail","author","staging","notify","event","details","console","error","manager","defaults","agreeToTerms","subscriberEmail","then","fullConfig","altnames","add","subject","get","servername","pems","privkey","cert","chain","info","catch","e","code"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,mBAAD,CAAjB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASE,SAAT,GAAqB;AACnB,MAAIC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB;AAC/BC,IAAAA,SAAS,EAAE,2BADoB;AAE/BC,IAAAA,YAAY,EAAEP,GAAG,CAACQ,IAAJ,GAAW,GAAX,GAAiBR,GAAG,CAACS,OAFJ;AAG/BC,IAAAA,eAAe,EAAEV,GAAG,CAACW,MAHU;AAI/BC,IAAAA,OAAO,EAAE,IAJsB;AAK/BC,IAAAA,MAAM,EAAE,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AAChC,UAAI,YAAYD,KAAhB,EAAuB;AACrB;AACAE,QAAAA,OAAO,CAACC,KAAR,CAAcF,OAAd;AACD;AACF;AAV8B,GAAjB,CAAhB;AAaAX,EAAAA,SAAS,CAACc,OAAV,CACGC,QADH,CACY;AACRC,IAAAA,YAAY,EAAE,IADN;AAERC,IAAAA,eAAe,EAAE;AAFT,GADZ,EAKGC,IALH,CAKQ,UAAUC,UAAV,EAAsB;AAC1B,QAAIC,QAAQ,GAAG,CAAC,mBAAD,EAAsB,uBAAtB,CAAf;AAEApB,IAAAA,SAAS,CACNqB,GADH,CACO;AACHC,MAAAA,OAAO,EAAEF,QAAQ,CAAC,CAAD,CADd;AAEHA,MAAAA,QAAQ,EAAEA;AAFP,KADP,EAKGF,IALH,CAKQ,YAAY,CAChB;AACD,KAPH;AAQD,GAhBH;AAkBAlB,EAAAA,SAAS,CACNuB,GADH,CACO;AAAEC,IAAAA,UAAU,EAAEF;AAAd,GADP,EAEGJ,IAFH,CAEQ,UAAUO,IAAV,EAAgB;AACpB,QAAIA,IAAI,IAAIA,IAAI,CAACC,OAAb,IAAwBD,IAAI,CAACE,IAA7B,IAAqCF,IAAI,CAACG,KAA9C,EAAqD;AACnDhB,MAAAA,OAAO,CAACiB,IAAR,CAAa,SAAb;AACD,KAHmB,CAIpB;;AACD,GAPH,EAQGC,KARH,CAQS,UAAUC,CAAV,EAAa;AAClBnB,IAAAA,OAAO,CAACC,KAAR,CAAc,gBAAd,EAAgCkB,CAAC,CAACC,IAAlC;AACApB,IAAAA,OAAO,CAACC,KAAR,CAAckB,CAAd;AACD,GAXH;AAYD;;AAGD,eAAehC,SAAf","sourcesContent":["\"use strict\";\n\nvar pkg = require(\"./../package.json\");\nvar Greenlock = require(\"greenlock\");\n\nfunction updateSSL() {\n  var greenlock = Greenlock.create({\n    configDir: \"./greenlock.d/config.json\",\n    packageAgent: pkg.name + \"/\" + pkg.version,\n    maintainerEmail: pkg.author,\n    staging: true,\n    notify: function (event, details) {\n      if (\"error\" === event) {\n        // `details` is an error object in this case\n        console.error(details);\n      }\n    },\n  });\n\n  greenlock.manager\n    .defaults({\n      agreeToTerms: true,\n      subscriberEmail: \"webhosting@example.com\",\n    })\n    .then(function (fullConfig) {\n      var altnames = [\"letscodesbisd.com\", \"www.letscodesbisd.com\"];\n\n      greenlock\n        .add({\n          subject: altnames[0],\n          altnames: altnames,\n        })\n        .then(function () {\n          // saved config to db (or file system)\n        });\n    });\n\n  greenlock\n    .get({ servername: subject })\n    .then(function (pems) {\n      if (pems && pems.privkey && pems.cert && pems.chain) {\n        console.info(\"Success\");\n      }\n      //console.log(pems);\n    })\n    .catch(function (e) {\n      console.error(\"Big bad error:\", e.code);\n      console.error(e);\n    });\n}\n\n\nexport default updateSSL;"]},"metadata":{},"sourceType":"module"}