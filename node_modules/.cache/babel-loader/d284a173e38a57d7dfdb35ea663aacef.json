{"ast":null,"code":"var DIR = module.exports; // This will ALWAYS print out a notice if the URL is clearly a staging URL\n\nDIR._getDirectoryUrl = function (dirUrl, domain) {\n  var liveUrl = 'https://acme-v02.api.letsencrypt.org/directory';\n  dirUrl = DIR._getDefaultDirectoryUrl(dirUrl, '', domain);\n\n  if (!dirUrl) {\n    dirUrl = liveUrl; // This will print out a notice (just once) if no directoryUrl has been supplied\n\n    if (!DIR._shownDirectoryUrl) {\n      DIR._shownDirectoryUrl = true;\n      console.info('ACME Directory URL:', dirUrl);\n    }\n  }\n\n  return dirUrl;\n}; // Handle staging URLs, pebble test server, etc\n\n\nDIR._getDefaultDirectoryUrl = function (dirUrl, staging, domain) {\n  var stagingUrl = 'https://acme-staging-v02.api.letsencrypt.org/directory';\n  var stagingRe = /(^http:|staging|^127\\.0\\.|^::|localhost)/;\n  var env = '';\n  var args = [];\n\n  if ('undefined' !== typeof process) {\n    env = process.env && process.env.ENV || '';\n    args = process.argv && process.argv.slice(1) || [];\n  }\n\n  if (staging || stagingRe.test(dirUrl) || args.includes('--staging') || /DEV|STAG/i.test(env)) {\n    if (!stagingRe.test(dirUrl)) {\n      dirUrl = stagingUrl;\n    }\n\n    console.info('[staging] ACME Staging Directory URL:', dirUrl, env);\n    console.warn('FAKE CERTIFICATES (for testing) only', env, domain);\n    console.warn('');\n  }\n\n  return dirUrl;\n};\n\nDIR._shownDirectoryUrl = false;","map":{"version":3,"sources":["/home/neil/Desktop/Programming/LetsCodeSBISD/Forwarder/node_modules/@root/greenlock/lib/directory-url.js"],"names":["DIR","module","exports","_getDirectoryUrl","dirUrl","domain","liveUrl","_getDefaultDirectoryUrl","_shownDirectoryUrl","console","info","staging","stagingUrl","stagingRe","env","args","process","ENV","argv","slice","test","includes","warn"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,MAAM,CAACC,OAAjB,C,CAEA;;AACAF,GAAG,CAACG,gBAAJ,GAAuB,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;AAC5C,MAAIC,OAAO,GAAG,gDAAd;AACAF,EAAAA,MAAM,GAAGJ,GAAG,CAACO,uBAAJ,CAA4BH,MAA5B,EAAoC,EAApC,EAAwCC,MAAxC,CAAT;;AACA,MAAI,CAACD,MAAL,EAAa;AACTA,IAAAA,MAAM,GAAGE,OAAT,CADS,CAET;;AACA,QAAI,CAACN,GAAG,CAACQ,kBAAT,EAA6B;AACzBR,MAAAA,GAAG,CAACQ,kBAAJ,GAAyB,IAAzB;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,qBAAb,EAAoCN,MAApC;AACH;AACJ;;AACD,SAAOA,MAAP;AACH,CAZD,C,CAcA;;;AACAJ,GAAG,CAACO,uBAAJ,GAA8B,UAASH,MAAT,EAAiBO,OAAjB,EAA0BN,MAA1B,EAAkC;AAC5D,MAAIO,UAAU,GAAG,wDAAjB;AACA,MAAIC,SAAS,GAAG,0CAAhB;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAI,gBAAgB,OAAOC,OAA3B,EAAoC;AAChCF,IAAAA,GAAG,GAAIE,OAAO,CAACF,GAAR,IAAeE,OAAO,CAACF,GAAR,CAAYG,GAA5B,IAAoC,EAA1C;AACAF,IAAAA,IAAI,GAAIC,OAAO,CAACE,IAAR,IAAgBF,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAjB,IAA2C,EAAlD;AACH;;AAED,MACIR,OAAO,IACPE,SAAS,CAACO,IAAV,CAAehB,MAAf,CADA,IAEAW,IAAI,CAACM,QAAL,CAAc,WAAd,CAFA,IAGA,YAAYD,IAAZ,CAAiBN,GAAjB,CAJJ,EAKE;AACE,QAAI,CAACD,SAAS,CAACO,IAAV,CAAehB,MAAf,CAAL,EAA6B;AACzBA,MAAAA,MAAM,GAAGQ,UAAT;AACH;;AACDH,IAAAA,OAAO,CAACC,IAAR,CAAa,uCAAb,EAAsDN,MAAtD,EAA8DU,GAA9D;AACAL,IAAAA,OAAO,CAACa,IAAR,CAAa,sCAAb,EAAqDR,GAArD,EAA0DT,MAA1D;AACAI,IAAAA,OAAO,CAACa,IAAR,CAAa,EAAb;AACH;;AAED,SAAOlB,MAAP;AACH,CAzBD;;AA2BAJ,GAAG,CAACQ,kBAAJ,GAAyB,KAAzB","sourcesContent":["var DIR = module.exports;\n\n// This will ALWAYS print out a notice if the URL is clearly a staging URL\nDIR._getDirectoryUrl = function(dirUrl, domain) {\n    var liveUrl = 'https://acme-v02.api.letsencrypt.org/directory';\n    dirUrl = DIR._getDefaultDirectoryUrl(dirUrl, '', domain);\n    if (!dirUrl) {\n        dirUrl = liveUrl;\n        // This will print out a notice (just once) if no directoryUrl has been supplied\n        if (!DIR._shownDirectoryUrl) {\n            DIR._shownDirectoryUrl = true;\n            console.info('ACME Directory URL:', dirUrl);\n        }\n    }\n    return dirUrl;\n};\n\n// Handle staging URLs, pebble test server, etc\nDIR._getDefaultDirectoryUrl = function(dirUrl, staging, domain) {\n    var stagingUrl = 'https://acme-staging-v02.api.letsencrypt.org/directory';\n    var stagingRe = /(^http:|staging|^127\\.0\\.|^::|localhost)/;\n    var env = '';\n    var args = [];\n    if ('undefined' !== typeof process) {\n        env = (process.env && process.env.ENV) || '';\n        args = (process.argv && process.argv.slice(1)) || [];\n    }\n\n    if (\n        staging ||\n        stagingRe.test(dirUrl) ||\n        args.includes('--staging') ||\n        /DEV|STAG/i.test(env)\n    ) {\n        if (!stagingRe.test(dirUrl)) {\n            dirUrl = stagingUrl;\n        }\n        console.info('[staging] ACME Staging Directory URL:', dirUrl, env);\n        console.warn('FAKE CERTIFICATES (for testing) only', env, domain);\n        console.warn('');\n    }\n\n    return dirUrl;\n};\n\nDIR._shownDirectoryUrl = false;\n"]},"metadata":{},"sourceType":"script"}