{"ast":null,"code":"'use strict';\n\nvar A = module.exports;\n\nvar U = require('./utils.js');\n\nvar E = require('./errors.js');\n\nvar pending = {};\n\nA._getOrCreate = function (gnlck, mconf, db, acme, args) {\n  var email = args.subscriberEmail || mconf.subscriberEmail;\n\n  if (!email) {\n    throw E.NO_SUBSCRIBER('get account', args.subject);\n  } // TODO send welcome message with benefit info\n\n\n  return U._validMx(email).catch(function () {\n    throw E.NO_SUBSCRIBER('get account', args.subcriberEmail);\n  }).then(function () {\n    if (pending[email]) {\n      return pending[email];\n    }\n\n    pending[email] = A._rawGetOrCreate(gnlck, mconf, db, acme, args, email).catch(function (e) {\n      delete pending[email];\n      throw e;\n    }).then(function (result) {\n      delete pending[email];\n      return result;\n    });\n    return pending[email];\n  });\n}; // What we really need out of this is the private key and the ACME \"key\" id\n\n\nA._rawGetOrCreate = function (gnlck, mconf, db, acme, args, email) {\n  var p;\n\n  if (db.check) {\n    p = A._checkStore(gnlck, mconf, db, acme, args, email);\n  } else {\n    p = Promise.resolve(null);\n  }\n\n  return p.then(function (fullAccount) {\n    if (!fullAccount) {\n      return A._newAccount(gnlck, mconf, db, acme, args, email, null);\n    }\n\n    if (fullAccount.keypair && fullAccount.key && fullAccount.key.kid) {\n      return fullAccount;\n    }\n\n    return A._newAccount(gnlck, mconf, db, acme, args, email, fullAccount);\n  });\n};\n\nA._newAccount = function (gnlck, mconf, db, acme, args, email, fullAccount) {\n  var keyType = args.accountKeyType || mconf.accountKeyType;\n  var query = {\n    subject: args.subject,\n    email: email,\n    subscriberEmail: email,\n    customerEmail: args.customerEmail,\n    account: fullAccount || {},\n    directoryUrl: args.directoryUrl || mconf.directoryUrl || gnlck._defaults.directoryUrl\n  };\n  return U._getOrCreateKeypair(db, args.subject, query, keyType).then(function (kresult) {\n    var keypair = kresult.keypair;\n    var accReg = {\n      subscriberEmail: email,\n      agreeToTerms: args.agreeToTerms || mconf.agreeToTerms || gnlck._defaults.agreeToTerms,\n      accountKey: keypair.privateKeyJwk || keypair.private,\n      debug: args.debug\n    };\n    return acme.accounts.create(accReg).then(function (receipt) {\n      var reg = {\n        keypair: keypair,\n        receipt: receipt,\n        // shudder... not actually a KeyID... but so it is called anyway...\n        kid: receipt && receipt.key && (receipt.key.kid || receipt.kid),\n        email: args.email,\n        subscriberEmail: email,\n        customerEmail: args.customerEmail\n      };\n      var keyP;\n\n      if (kresult.exists) {\n        keyP = Promise.resolve();\n      } else {\n        query.keypair = keypair;\n        query.receipt = receipt;\n        /*\n        query.server = gnlck._defaults.directoryUrl.replace(\n        /^https?:\\/\\//i,\n        ''\n        );\n        */\n\n        keyP = db.setKeypair(query, keypair);\n      }\n\n      return keyP.then(function () {\n        if (!db.set) {\n          return Promise.resolve({\n            keypair: keypair\n          });\n        }\n\n        return db.set({\n          // id to be set by Store\n          email: email,\n          subscriberEmail: email,\n          customerEmail: args.customerEmail,\n          agreeTos: true,\n          agreeToTerms: true,\n          directoryUrl: args.directoryUrl || mconf.directoryUrl || gnlck._defaults.directoryUrl\n          /*\n          server: gnlck._defaults.directoryUrl.replace(\n          /^https?:\\/\\//i,\n          ''\n          )\n          */\n\n        }, reg);\n      }).then(function (fullAccount) {\n        if (fullAccount && 'object' !== typeof fullAccount) {\n          throw new Error(\"accounts.set should either return 'null' or an object with an 'id' string\");\n        }\n\n        if (!fullAccount) {\n          fullAccount = {};\n        }\n\n        fullAccount.keypair = keypair;\n\n        if (!fullAccount.key) {\n          fullAccount.key = {};\n        }\n\n        fullAccount.key.kid = reg.kid;\n        return fullAccount;\n      });\n    });\n  });\n};\n\nA._checkStore = function (gnlck, mconf, db, acme, args, email) {\n  if ((args.domain || args.domains) && !args.subject) {\n    console.warn(\"use 'subject' instead of 'domain'\");\n    args.subject = args.domain;\n  }\n\n  var account = args.account;\n\n  if (!account) {\n    account = {};\n  }\n\n  if (args.accountKey) {\n    console.warn('rather than passing accountKey, put it directly into your account key store'); // TODO we probably don't need this\n\n    return U._importKeypair(args.accountKey);\n  }\n\n  if (!db.check) {\n    return Promise.resolve(null);\n  }\n\n  return db.check({\n    //keypair: undefined,\n    //receipt: undefined,\n    email: email,\n    subscriberEmail: email,\n    customerEmail: args.customerEmail || mconf.customerEmail,\n    account: account,\n    directoryUrl: args.directoryUrl || mconf.directoryUrl || gnlck._defaults.directoryUrl\n  }).then(function (fullAccount) {\n    if (!fullAccount) {\n      return null;\n    }\n\n    return fullAccount;\n  });\n};","map":{"version":3,"sources":["/home/neil/Desktop/Programming/LetsCodeSBISD/Forwarder/node_modules/@root/greenlock/accounts.js"],"names":["A","module","exports","U","require","E","pending","_getOrCreate","gnlck","mconf","db","acme","args","email","subscriberEmail","NO_SUBSCRIBER","subject","_validMx","catch","subcriberEmail","then","_rawGetOrCreate","e","result","p","check","_checkStore","Promise","resolve","fullAccount","_newAccount","keypair","key","kid","keyType","accountKeyType","query","customerEmail","account","directoryUrl","_defaults","_getOrCreateKeypair","kresult","accReg","agreeToTerms","accountKey","privateKeyJwk","private","debug","accounts","create","receipt","reg","keyP","exists","setKeypair","set","agreeTos","Error","domain","domains","console","warn","_importKeypair"],"mappings":"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","sourcesContent":["'use strict';\n\nvar A = module.exports;\nvar U = require('./utils.js');\nvar E = require('./errors.js');\n\nvar pending = {};\n\nA._getOrCreate = function(gnlck, mconf, db, acme, args) {\n    var email = args.subscriberEmail || mconf.subscriberEmail;\n\n    if (!email) {\n        throw E.NO_SUBSCRIBER('get account', args.subject);\n    }\n\n    // TODO send welcome message with benefit info\n    return U._validMx(email)\n        .catch(function() {\n            throw E.NO_SUBSCRIBER('get account', args.subcriberEmail);\n        })\n        .then(function() {\n            if (pending[email]) {\n                return pending[email];\n            }\n\n            pending[email] = A._rawGetOrCreate(\n                gnlck,\n                mconf,\n                db,\n                acme,\n                args,\n                email\n            )\n                .catch(function(e) {\n                    delete pending[email];\n                    throw e;\n                })\n                .then(function(result) {\n                    delete pending[email];\n                    return result;\n                });\n\n            return pending[email];\n        });\n};\n\n// What we really need out of this is the private key and the ACME \"key\" id\nA._rawGetOrCreate = function(gnlck, mconf, db, acme, args, email) {\n    var p;\n    if (db.check) {\n        p = A._checkStore(gnlck, mconf, db, acme, args, email);\n    } else {\n        p = Promise.resolve(null);\n    }\n\n    return p.then(function(fullAccount) {\n        if (!fullAccount) {\n            return A._newAccount(gnlck, mconf, db, acme, args, email, null);\n        }\n\n        if (fullAccount.keypair && fullAccount.key && fullAccount.key.kid) {\n            return fullAccount;\n        }\n\n        return A._newAccount(gnlck, mconf, db, acme, args, email, fullAccount);\n    });\n};\n\nA._newAccount = function(gnlck, mconf, db, acme, args, email, fullAccount) {\n    var keyType = args.accountKeyType || mconf.accountKeyType;\n    var query = {\n        subject: args.subject,\n        email: email,\n        subscriberEmail: email,\n        customerEmail: args.customerEmail,\n        account: fullAccount || {},\n        directoryUrl:\n            args.directoryUrl ||\n            mconf.directoryUrl ||\n            gnlck._defaults.directoryUrl\n    };\n\n    return U._getOrCreateKeypair(db, args.subject, query, keyType).then(\n        function(kresult) {\n            var keypair = kresult.keypair;\n            var accReg = {\n                subscriberEmail: email,\n                agreeToTerms:\n                    args.agreeToTerms ||\n                    mconf.agreeToTerms ||\n                    gnlck._defaults.agreeToTerms,\n                accountKey: keypair.privateKeyJwk || keypair.private,\n                debug: args.debug\n            };\n            return acme.accounts.create(accReg).then(function(receipt) {\n                var reg = {\n                    keypair: keypair,\n                    receipt: receipt,\n                    // shudder... not actually a KeyID... but so it is called anyway...\n                    kid:\n                        receipt &&\n                        receipt.key &&\n                        (receipt.key.kid || receipt.kid),\n                    email: args.email,\n                    subscriberEmail: email,\n                    customerEmail: args.customerEmail\n                };\n\n                var keyP;\n                if (kresult.exists) {\n                    keyP = Promise.resolve();\n                } else {\n                    query.keypair = keypair;\n                    query.receipt = receipt;\n                    /*\n\t\t\t\t\tquery.server = gnlck._defaults.directoryUrl.replace(\n\t\t\t\t\t\t/^https?:\\/\\//i,\n\t\t\t\t\t\t''\n\t\t\t\t\t);\n                    */\n                    keyP = db.setKeypair(query, keypair);\n                }\n\n                return keyP\n                    .then(function() {\n                        if (!db.set) {\n                            return Promise.resolve({\n                                keypair: keypair\n                            });\n                        }\n                        return db.set(\n                            {\n                                // id to be set by Store\n                                email: email,\n                                subscriberEmail: email,\n                                customerEmail: args.customerEmail,\n                                agreeTos: true,\n                                agreeToTerms: true,\n                                directoryUrl:\n                                    args.directoryUrl ||\n                                    mconf.directoryUrl ||\n                                    gnlck._defaults.directoryUrl\n                                /*\n\t\t\t\t\t\t\t\tserver: gnlck._defaults.directoryUrl.replace(\n\t\t\t\t\t\t\t\t\t/^https?:\\/\\//i,\n\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t)\n                                */\n                            },\n                            reg\n                        );\n                    })\n                    .then(function(fullAccount) {\n                        if (fullAccount && 'object' !== typeof fullAccount) {\n                            throw new Error(\n                                \"accounts.set should either return 'null' or an object with an 'id' string\"\n                            );\n                        }\n\n                        if (!fullAccount) {\n                            fullAccount = {};\n                        }\n                        fullAccount.keypair = keypair;\n                        if (!fullAccount.key) {\n                            fullAccount.key = {};\n                        }\n                        fullAccount.key.kid = reg.kid;\n\n                        return fullAccount;\n                    });\n            });\n        }\n    );\n};\n\nA._checkStore = function(gnlck, mconf, db, acme, args, email) {\n    if ((args.domain || args.domains) && !args.subject) {\n        console.warn(\"use 'subject' instead of 'domain'\");\n        args.subject = args.domain;\n    }\n\n    var account = args.account;\n    if (!account) {\n        account = {};\n    }\n\n    if (args.accountKey) {\n        console.warn(\n            'rather than passing accountKey, put it directly into your account key store'\n        );\n        // TODO we probably don't need this\n        return U._importKeypair(args.accountKey);\n    }\n\n    if (!db.check) {\n        return Promise.resolve(null);\n    }\n\n    return db\n        .check({\n            //keypair: undefined,\n            //receipt: undefined,\n            email: email,\n            subscriberEmail: email,\n            customerEmail: args.customerEmail || mconf.customerEmail,\n            account: account,\n            directoryUrl:\n                args.directoryUrl ||\n                mconf.directoryUrl ||\n                gnlck._defaults.directoryUrl\n        })\n        .then(function(fullAccount) {\n            if (!fullAccount) {\n                return null;\n            }\n\n            return fullAccount;\n        });\n};\n"]},"metadata":{},"sourceType":"script"}